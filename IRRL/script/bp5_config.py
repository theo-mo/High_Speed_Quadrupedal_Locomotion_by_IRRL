"""
this script is used to config the nn input and output normalization parameter
"""
import numpy as np

# obs_mean = np.array([0.33,
#                      0.0, 0.0, 1.0,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57,
#                      0, 0, 0, 0, 0, 0,
#                      0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0,
#                      0.5, 0.5, 0.5, 0.5,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57,
#                      0, -0.78, 1.57])
obs_mean = np.hstack(([2.5, 0.0, 0.0],
                      [0.0, 0.0],
                      [0, -0.78, 1.57, 0, -0.78, 1.57, 0, -0.78, 1.57, 0, -0.78, 1.57],
                      [0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0, 0],
                      [0, 0, 1],
                      [0, 0, 0]))
# obs_std = np.array([0.1,
#                     0.7, 0.7, 0.7,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0,
#                     4.0, 4.0, 4.0,
#                     10.0, 10.0, 10.0,
#                     20.0, 20.0, 20.0,
#                     20.0, 20.0, 20.0,
#                     20.0, 20.0, 20.0,
#                     20.0, 20.0, 20.0,
#                     0.5, 0.5, 0.5, 0.5,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0,
#                     1.0, 1.0, 1.0])
obs_std = np.hstack((np.ones(3),
# obs_std = np.hstack((np.array([5, 1, 1]),
                     np.ones(2),
                     np.ones(12),
                     # np.ones(12) * 5,
                     np.array([5, 35, 40, 5, 35, 40, 5, 35, 40, 5, 35, 40]),
                     np.ones(3) * 0.7,
                     # np.ones(3) * 2.0))
                     np.ones(3) * 3.0))
# obs_std[0:3] = [2.5, 1.0, 2.0]
print("please check observation's mean and std")
action_mean = obs_mean[5:17].copy()
# action_std = np.ones(12) * 0.6
action_std = np.ones(12) * 1.0
# action_std = np.ones(12) * 10.0
